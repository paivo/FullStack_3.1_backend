{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","props","value","newFilter","onChange","handleFilterChange","AddPersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","ShowNumbers","personsToShow","map","person","key","removePerson","Person","name","number","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","then","response","data","filter","toLowerCase","includes","message","className","event","console","log","target","window","confirm","changedNumber","find","n","changedPerson","pers","changeNumber","setTimeout","preventDefault","personObject","concat","person2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e0f5e52.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update, \n  remove: remove\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(response => {\n      setPersons(response.data)\n      })\n  }, [])\n\n  const removePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.remove(person.id)\n      setPersons(persons.filter(person2 => person2.id !== person.id))\n      setErrorMessage(\n        `Removed ${person.name}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)  \n    }\n  }\n\n  const changeNumber = (id, changedNumber) => {\n    const person = persons.find(n => n.id === id)\n    const changedPerson = { ...person, number: changedNumber }\n    console.log(changedPerson)\n    personService.update(id, changedPerson).then(response => {\n      setPersons(persons.map(pers => pers.id !== id ? pers : response.data))\n    })\n  }\n\n  const addPerson = (event) => {\n    var names = persons.map((person) => person.name)\n    if (names.includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const currentId = persons.find(n => n.name === newName).id\n        changeNumber(currentId, newNumber)\n        setErrorMessage(\n          `Changed ${newName}s number`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)          \n      } else {\n          event.preventDefault()\n      }\n    } else {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber,\n        }\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewNumber('')\n        personService\n          .create(personObject)\n          .then(response => {\n            setPersons(persons.concat(response.data))\n            setNewName('')\n            setNewNumber('')\n          })\n        setErrorMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)          \n    }\n  }\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <AddPersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <ShowNumbers personsToShow={personsToShow} removePerson={removePerson}/>\n    </div>\n  )\n\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with:<input value={props.newFilter} onChange={props.handleFilterChange}/>\n    </div>\n  )\n}\n\nconst AddPersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        name:<input value={props.newName} onChange={props.handleNameChange}/><br></br>\n        number:<input value={props.newNumber} onChange={props.handleNumberChange}/><br></br>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  )\n}\n\nconst ShowNumbers = (props) => {\n    return (\n      <div>\n        {props.personsToShow.map((person) =>\n          <Person key={person.id} person={person} removePerson={props.removePerson} /> \n        )}\n      </div>\n    )\n}\n\nconst Person = ( {person, removePerson} ) => {\n  return (\n    <div>\n      {person.name} {person.number} \n      <button onClick={() => removePerson(person)}>\n        delete\n      </button>\n    </div>\n  )\n}\n\n\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}